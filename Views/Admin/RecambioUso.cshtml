@model Piezas2.Models.RecambioUsoModel
@{
  ViewData["Title"] = "Define el uso de los recambios";
}

<div class="container main-frame">

  <div class="">
    <div class="btn-group" id="comboCategoria">
      <button type="button" class="btn btn-default">&emsp;</button>
      <button type="button" class="btn dropdown-toggle btn-primary" data-toggle="dropdown" aria-expanded="false">
        <span class="caret"></span><span class="sr-only">Toggle Dropdown</span>
      </button>
      <ul class="dropdown-menu" role="menu"></ul>
    </div>

    <div class="btn-group" id="comboFabricante">
      <button type="button" class="btn btn-default">&emsp;</button>
      <button type="button" class="btn dropdown-toggle btn-primary" data-toggle="dropdown" aria-expanded="false">
        <span class="caret"></span><span class="sr-only">Toggle Dropdown</span>
      </button>
      <ul class="dropdown-menu" role="menu"></ul>
    </div>

    <div class="btn-group" id="FindRecambio">
      <button type="button" class="btn btn-primary">Filtrar Recambios</button>
    </div>
  </div>

  <div id="ErrorMsgs" ></div>

  <div class="columns-container">

    <div class="column" id="colItems">
      <div class="table-responsive">
        <table class="table table-bordered table-striped hidden" id="ItemsList">
          <tbody>
          </tbody>
        </table>

        <div class="btn-group hidden" id="FindMore">
          <button type="button" class="btn btn-primary">Buscar más recambios</button>
          <div id="nowRec"></div>
        </div>

      </div>
    </div>

    <div class="column" id="colCoches">
      <div style="padding:10px;">
        <h4 id="ItemName" style="float:left"></h4>
        <div class="btn-group" id="Update" style="float:right">
          <button type="button" class="btn btn-primary">Actualizar</button>
        </div>
      </div>
      <table class="table table-bordered table-striped" id="CochesList">
        <tbody>
        </tbody>
      </table>
    </div>
  </div>

</div>

@section Scripts{
  <script type="text/javascript">

    // Identificador del item con el que se llama la página
    var ItemId = @Model.Id;

    // Datos para todos los combos de seleccion de recamios
    var Datos = {
                Categor: @Model.CategoriasToJson(),
                Fabric : @Model.FabricantesToJson()
                };

    // Identificadores de los combos para la seleccion de recambios
    var CbIDs = {
                Categor: "#comboCategoria",
                Fabric : "#comboFabricante"
                };

    // Datos sobre los recambios obtenidos mediante las busquedas
    var findUrl = "";   // Url de la ultima busqueda realizada con todos los parametros
    var Items = [];     // Datos de todos los items que se muestran
    var Filter;         // Datos de los filtros usados para obtener los datos
    var nItems = 0;     // Número de items totales para los filtros aplicados 
    var lastItem = 0;   // Número del último item que se ha mostrado
    var Orden = 0;      // Indice del campo por donde hay que ordenar, 0 => No ordenar, Negativo => Orden desendiente

    var cbDats;         // Maneja la entrada de datos mediante combos
    var Msg;            // Maneja recuadro para mostrar errores
    var Conn;           // Objeto que maneja la conexion con el servidor

    var chkInit = new Set();    // Coches que estaban chequeados al inicio

    // Inicia manipuladores y variables, después de cargarse la página
    $( function()
      {
      cbDats = new UIFilters( Datos, CbIDs );

      //// Atención cuando se oprimen diferentes elementos de la interface
      $("#FindRecambio").on( 'click', OnFindRecambio );   
      $("#FindMore").on( 'click', OnFindMoreRecambio );  
      $("#Update").on( 'click', OnUpdateItemUso );  
      
      Msg = new MsgAlert( "#ErrorMsgs" );
      Conn = new ServerConnection( "GET", (s)=>ConnError(s) );

      if( ItemId>0 )  FindCochesForItem( ItemId );
      } );

    // Muestra los errores producidos durante la solicitud de datos via AJAX
    function ConnError( json )
      {
      var sMsg = "";
      if( json.Error>0 ) sMsg = "<b> Error:" + json.Error + "</b> ";

      Msg.Show( sMsg + json.sError, "danger");
      }

    // Se llama al oprimir el botón de buscar recambio
    function OnFindRecambio()
      {
      findUrl = "/Api/Recambios/" + cbDats.GetUrlSegments();

      Conn.Send( findUrl + "/Order-4", (datos) => 
        {
        Items  = datos.items; 
        Filter = datos.filters; 
        nItems = datos.count; 
        lastItem = Items.length;

        FillItemsList();
        }, "#colItems" );
      }

    // Carga mas recambio en pantallas si todavia no se han cargado todos
    function OnFindMoreRecambio()
      {
      if( !findUrl ) return;

      var Url = findUrl + "/Order-" + Orden + "/Rango-" + lastItem;

      Conn.Send( Url, (datos) => 
        {
        Items = datos.items; 
        lastItem += Items.length;

        FillItemsList( true );
        }, "#TabInfo" );
      }

    // Llena la lista de Itmes con los recambios encontrados
    function FillItemsList( add = false)
      {
      if( !add ) $("#ItemsList").children().eq(1).empty();

      for( var i = 0; i < Items.length; ++i )
        {
        var item = Items[i]; 
        var itemHml = "<tr data-id="+ item.id + ">" +
                        "<td>"+ item.nombre     +"</td>" +
                      "</tr>";

        $("#ItemsList").append( itemHml );
        }

      $("#ItemsList tbody tr").on( 'click', (e)=>
        { 
        var row = $(e.currentTarget);
        var id  = row.data("id");

        FindCochesForItem( id );
        } );


      ShowInfo();                    // Muestra/esconde información debajo de la tabla de items

      //$("#nowRec").text( lastItem + " de " + nItems );
      }

    // Decide la informacion que se debe mostrar y cual no, de acuerdo al resultado de la busqueda
    function ShowInfo()        
      {
      var count = Items.length;

      // Tabla con la lista de recambios encontrados
      var tabla = $("#ItemsList");
      if( count == 0 ) tabla.addClass("hidden"); 
      else             tabla.removeClass("hidden"); 

      // Botón para buscar mas recambios
      var BtnMas = $("#FindMore");
      if( lastItem < nItems ) BtnMas.removeClass("hidden");
      else                    BtnMas.addClass("hidden");

      // Cartel con información
      if( count == 0 ) Msg.Show( "No se encontro ningún recambio que cumpla las condiciones dadas", "info" );
      else             Msg.Hide();
      }

    // Busca los coches donde se usa el item dado por 'id'
    function FindCochesForItem( id )
      {
      $("#CochesList").children().eq(0).empty();
      chkInit = new Set();

      Conn.Send( "/Api/RecambioUso/" + id, (datos) => 
        {
        ItemId = id;
        $("#ItemName").text( datos.nombre );

        for( let coche of datos.coches )
          {
          var name = "<strong> "+ coche.marca +" </strong><span> "+ coche.modelo +"<strong> con motor </strong>"+ coche.motor + "</span>";

          var check = "";
          if( coche.useItem ) 
            {
            check = "checked=true" ;
            chkInit.add( coche.id );
            }
           
          var itemHml = "<tr data-id="+ coche.id + ">" +
                          "<td> <input type='checkbox'"+ check +"> "+ name + " ("+ coche.id +")</td>" +
                        "</tr>";

          $("#CochesList").append( itemHml );
          }
        }, "#colCoches" );
      }

    function OnUpdateItemUso()
      {
      var rows = $("#CochesList tbody tr");

      var chkEnd = []; 
      for( var i=0; i<rows.length; i++ )                                // Busco todos los que hay marcados
        {
        var row = rows.eq(i);

        var id  = row.data("id");
        var chk = row.children().eq(0).children()[0].checked;           // children().eq(0) => td y children()[0] => input
    
        if( chk ) chkEnd.push( id );
        }

      var temp = new Set();                                             // Hago una copia de los que habian al inicio
      for( let id of chkInit ) temp.add( id );

      for( var i=0; i<chkEnd.length; i++ )                              // Los que estaban en los dos lugares los borro
        {
        if( temp.has( chkEnd[i] ) )
          {
          temp.delete( chkEnd[i] );
          chkEnd.splice(i--,1);
          }
        }
    
      var chkDel = []; 
      for( let id of temp ) chkDel.push( id );

      UpdateBase( chkEnd, chkDel )
      }

    function UpdateBase( lstAdd, lstDel )
      {
      if( lstAdd.length >0 )
        Conn.Send( "/api/AddRecambioUsos/"+ItemId+"/"+lstAdd.join(" "), (datos) => 
          {
          if( datos.Count != lstAdd.length )
            alert( "Ocurrio un error al insertar los coches"  );

          if( lstDel.length==0 ) FindCochesForItem( ItemId );
          }, "#colCoches" );

      if( lstDel.length >0 )
        Conn.Send( "/api/DelRecambioUsos/"+ItemId+"/"+lstDel.join(" "), (datos) => 
          {
          if( datos.Count != lstDel.length )
            alert( "Ocurrio un error al borrar los coches"  );

          FindCochesForItem( ItemId );
          }, "#colCoches" );
      }


  </script>
}